{
  "name": "@intentlang/core",
  "version": "1.1.0",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "default": "./dist/index.js"
    }
  },
  "files": [
    "dist"
  ],
  "sideEffects": false,
  "scripts": {
    "gen:clean": "rm -rf ./grammar/*.g4 ./src/_generated",
    "gen:ebnf": "node ./scripts/ebnf2g4.mjs -i ./grammar/IntentLang.ebnf -o ./grammar --grammar IntentLang",
    "gen:parser": "mkdir -p ./src/_generated/grammar && npx antlr4ng -Dlanguage=TypeScript -visitor -no-listener -o src/_generated grammar/IntentLangLexer.g4 && npx antlr4ng -Dlanguage=TypeScript -visitor -no-listener -o src/_generated -lib src/_generated/grammar grammar/IntentLangParser.g4",
    "gen:antlr:patch": "node ./scripts/patch-antlr-esm.mjs ./src/_generated/",
    "gen:ast": "node ./scripts/gen-ast.mjs",
    "gen:ast:builder": "node ./scripts/gen-ast-builder.mjs",
    "gen:post": "node -e \"const fs=require('fs');for (const f of fs.readdirSync('./src/_generated/grammar')) { if (f.endsWith('.ts')) { const p='./src/_generated/grammar/'+f; fs.writeFileSync(p, fs.readFileSync(p,'utf8').replace(/\\s+$/gm,'')+'\\n'); } }\"",
    "generate": "pnpm gen:clean && pnpm gen:ebnf && pnpm run gen:parser && pnpm run gen:antlr:patch && pnpm run gen:ast && pnpm run gen:ast:builder && pnpm run gen:post",
    "build": "tsc -p tsconfig.json",
    "dev": "tsc -p tsconfig.json -w",
    "lint": "echo \"(add eslint later)\"",
    "test": "vitest run",
    "typecheck": "tsc -p tsconfig.json --noEmit"
  },
  "devDependencies": {
    "@types/node": "24.3.0",
    "@vitest/coverage-v8": "^3.2.4",
    "antlr4ng": "^3.0.16",
    "antlr4ng-cli": "^2.0.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  },
  "dependencies": {}
}
