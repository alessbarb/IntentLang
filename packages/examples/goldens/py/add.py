# Generated by IntentLang
# DO NOT EDIT MANUALLY

from __main__ import Random, Result

# TODO: Implementar un sistema de ordenación de tipos basado en dependencias en lugar de este enfoque simple de dos pasadas.

def add(a: int, b: int) -> int:
    assert a >= 0 and b >= 0, "Precondition failed"
    # TODO: Implementar la cláusula 'ensures'. Podría requerir decorar la función o inyectar aserciones antes de cada 'return'.
    return a + b

def rollDie() -> int:
    # TODO: Implementar la cláusula 'ensures' para efectos.
    # Stmt type 'ExprStmt' not implemented

def test_deterministic():
    # TODO: Añadir el setup del runtime (initRuntime) y el paso de dependencias a los tests que usan efectos.
    sum = add(1, 2)
    first = rollDie()
    second = rollDie()