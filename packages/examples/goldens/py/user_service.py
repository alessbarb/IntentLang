from __future__ import annotations
# Generated by IntentLang
# DO NOT EDIT MANUALLY

from dataclasses import dataclass
from typing import NewType
from datetime import datetime
from ._prelude import Http, Clock, Result, Ok, Err

Email = NewType("Email", str)
UserId = str

@dataclass
class User:
    id: UserId
    name: str
    email: Email
    createdAt: datetime

@dataclass
class ApiError:
    code: int
    message: str

def toEmail(s: str) -> Result[Email, str]:
    return Ok(Email(s)) if "@" in s else Err("Invalid email")

async def createUser(
    deps,  # e.g. {"http": Http, "clock": Clock}
    input: object,  # e.g. {"name": str, "email": Email}
) -> Result[User, ApiError]:
    assert hasattr(input, "name") and len(getattr(input, "name")) >= 2, "Precondition failed"
    return Err(ApiError(code=501, message="Not implemented"))
